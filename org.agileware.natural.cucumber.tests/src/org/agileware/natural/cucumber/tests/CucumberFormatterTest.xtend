/*
 * generated by Xtext
 */
package org.agileware.natural.cucumber.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.junit.Test
import org.junit.runner.RunWith

import static org.agileware.natural.cucumber.tests.CucumberTestHelpers.EXAMPLE_FEATURE

@RunWith(XtextRunner)
@InjectWith(CucumberInjectorProvider)
class CucumberFormatterTest {

	@Inject CucumberTestHelpers _th

	@Test
	def void indentScenarioSteps() {
		val toBeFormatted = '''
			Feature: Jack and Jill
			
			Scenario: Jack falls down
			When Jack falls down
			Then Jill comes tumbling after
		'''
		val expectation = '''
			Feature: Jack and Jill
			
			Scenario: Jack falls down
				When Jack falls down
				Then Jill comes tumbling after
		'''
		_th.assertFormatted(toBeFormatted, expectation)
	}

	@Test
	def void indentBackgroundSteps() {
		val toBeFormatted = '''
			Feature: Hello, Cucumber!
			
			Background: Stock Symbols
			* a stock of symbol STK1 and a threshold of 10.0
			Given the stock is traded at 5.0
			And the alert status should be OFF
			When the stock is traded at 11.0
			Then the alert status should be ON
		'''
		val expectation = '''
			Feature: Hello, Cucumber!
			
			Background: Stock Symbols
				* a stock of symbol STK1 and a threshold of 10.0
				Given the stock is traded at 5.0
				And the alert status should be OFF
				When the stock is traded at 11.0
				Then the alert status should be ON
		'''
		_th.assertFormatted(toBeFormatted, expectation)
	}
	
	@Test
	def void indentStepTable() {
		val toBeFormatted = '''
			Feature: Jack and Jill
			
			Scenario: Jack falls down
			When Jack falls down
			| foo | bar |
			| 2   | 3   |
			| 5   | 7   |
			Then Jill comes tumbling after
		'''
		val expectation = '''
			Feature: Jack and Jill
			
			Scenario: Jack falls down
				When Jack falls down
					| foo | bar |
					| 2   | 3   |
					| 5   | 7   |
				Then Jill comes tumbling after
		'''
		_th.assertFormatted(toBeFormatted, expectation)
	}
	
	@Test
	def void indentStepText() {
		val toBeFormatted = '''
			Feature: Jack and Jill
			
			Scenario: Jack falls down
			When Jack falls down
			"""
			The quick brown fox
			Jumps over the lazy dog
			"""
			Then Jill comes tumbling after
		'''
		val expectation = '''
			Feature: Jack and Jill
			
			Scenario: Jack falls down
				When Jack falls down
				"""
				The quick brown fox
				Jumps over the lazy dog
				"""
				Then Jill comes tumbling after
		'''
		_th.assertFormatted(toBeFormatted, expectation)
	}
	
	@Test
	def void preserveValidFormatting() {
		_th.assertFormatted(EXAMPLE_FEATURE)
	}
}
