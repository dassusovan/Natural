grammar org.agileware.natural.cucumber.Cucumber hidden(WS, SL_COMMENT)

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate cucumber "http://www.agileware.org/natural/cucumber"


// ----------------------------------------------------------
//
// Feature
//
// ----------------------------------------------------------

Feature: {Feature}
	tags+=Tag*
	'Feature:'
	title=Text? EOL+
	narrative=Narrative?
	background=Background?
	scenarios+=AbstractScenario*
;

Background: {Background}
	'Background:'
	title=Text? EOL+
	narrative=Narrative?
	steps+=Step*
;
	
AbstractScenario: (Scenario | ScenarioOutline);

Scenario: {Scenario}
	tags+=Tag*
	'Scenario:'
	title=Text? EOL+
	narrative=Narrative?
	steps+=Step*
;

ScenarioOutline:
	tags+=Tag*
	'Scenario' 'Outline:'
	title=Text? EOL+
	narrative=Narrative?
	steps+=Step*
	examples+=Example+
;

Example:
	tags+=Tag*
	'Examples:'
	title=Text? EOL+
	narrative=Narrative?
	table=Table
;


// ----------------------------------------------------------
//
// Step
//
// ----------------------------------------------------------
	
Step: AnyStep
	| GivenStep
	| WhenStep
	| ThenStep
	| AndStep
;

AnyStep:
	keyword=ANY_KEYWORD
	description=Text EOL+
	(table=Table | text=DocString)?
;


GivenStep:
	keyword=GIVEN_KEYWORD
	description=Text EOL+
	(table=Table | text=DocString)?
;


WhenStep:
	keyword=WHEN_KEYWORD
	description=Text EOL+
	(table=Table | text=DocString)?
;

ThenStep:
	keyword=THEN_KEYWORD
	description=Text EOL+
	(table=Table | text=DocString)?
;

AndStep:
	keyword=AND_KEYWORD
	description=Text EOL+
	(table=Table | text=DocString)?
;

terminal ANY_KEYWORD: '*';
terminal GIVEN_KEYWORD: 'Given';
terminal WHEN_KEYWORD: 'When';
terminal THEN_KEYWORD: 'Then';
terminal AND_KEYWORD: 'And';
	

// ----------------------------------------------------------
//
// Common Elements
//
// ----------------------------------------------------------

Tag:
	'@' key=WORD
	(':'? value=Text)?
;

Table:
	(rows+=TABLE_ROW EOL)+
;

terminal TABLE_ROW: 
	'|' (TABLE_CELL '|')+
;

terminal fragment TABLE_CELL: !('|' | '\n' | '\r')*;
	
DocString:
	value=DOC_STRING
	EOL+
;

Narrative returns ecore::EString:
	(TextLiteral TextLiteral* EOL+)+
;

Text returns ecore::EString:
 	TextLiteral+
;

TextLiteral: PLACEHOLDER
	| WORD
	| PUNCTUATION
;
	
terminal DOC_STRING: ('"""' -> '"""' | "'''" -> "'''");

terminal TABLE_SEPERATOR: '|';

terminal PLACEHOLDER:
	('<' WORD '>')
	| ('[' WORD ']')
;

terminal WORD: 
	(LETTER | DIGIT)
	(LETTER | DIGIT | '_' | '-' | '.' )*
;

terminal SL_COMMENT: '#' !('\n' | '\r')* NL;

terminal PUNCTUATION: CHAR;

terminal EOL: NL;

terminal WS: (SPACE | '\t');

terminal fragment NL: ('\r'? '\n');


// ----------------------------------------------------------
//
// Unicode Character Ranges
//
// ----------------------------------------------------------

terminal fragment CHAR: ASCII_CHAR;

terminal fragment SPACE: ASCII_SPACE;

terminal fragment DIGIT: ASCII_DIGIT;

terminal fragment LETTER: LATIN_ALPHABET;

// Basic Latin
////

terminal fragment ASCII_SPACE: '\u0020';

terminal fragment ASCII_DIGIT: ('\u0030'..'\u0039');

// all ascii chars other than letters, digits, or space
terminal fragment ASCII_CHAR: ('\u0021'..'\u002F')
	| ('\u003A'..'\u0040')
	| ('\u005B'..'\u0060')
	| ('\u007B'..'\u007E')
;

terminal fragment LATIN_ALPHABET: ('\u0041'..'\u005A')
	| ('\u0061'..'\u007A')
;
