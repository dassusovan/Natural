/*
 * generated by Xtext
 */
package org.agileware.natural.cucumber.formatting2

import com.google.inject.Inject
import org.agileware.natural.cucumber.cucumber.Background
import org.agileware.natural.cucumber.cucumber.Feature
import org.agileware.natural.cucumber.services.CucumberGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class CucumberFormatter extends AbstractFormatter2 {
	
	@Inject extension CucumberGrammarAccess

	def dispatch void format(Feature feature, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		feature.meta.format
		feature.background.format
		for (abstractScenario : feature.scenarios) {
			abstractScenario.format
		}
	}

	def dispatch void format(Background background, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (step : background.steps) {
			step.format
		}
	}
	
	// TODO: implement for Scenario, ScenarioOutline, Example, Step, Meta
}
